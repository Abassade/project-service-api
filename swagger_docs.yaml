swagger: "2.0"
info:
  title: User Authentication Service
  description: This is user authentication micro services that integrates the google
    sign action of the user on the front end. this service simply takes the token
    sent by google makes a request with it to get the user details to determine if
    that credential has access to the system
  termsOfService: https://bitbucket.org/terragonengineering/andromeda-user-service/wiki/Home
  contact:
    email: mjebutu@terragonltd.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
host: localhost
schemes:
- http
paths:
  /users:
    get:
      summary: Finds all authenticated users in the database
      operationId: findallusers
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: fields
        in: query
        description: This is a pre-determined constant per the specification to indicate
          that this request is for an authorization code.
        type: string
      responses:
        200:
          $ref: '#/definitions/ApiResponse'
        400:
          $ref: '#/definitions/ApiResponse'
  /users/{email}:
    get:
      summary: Finds a particular user by email
      description: email unique to the user that filters that user
      operationId: findaUserbyEmail
      parameters:
      - name: email
        in: path
        description: email unique to the user that filters that user
        required: true
        type: string
      responses:
        200:
          $ref: '#/definitions/ApiResponse'
        404:
          description: invalid paramaters
  /users/status/{email}:
    patch:
      tags:
      - users
      summary: Activate or Deactivate a User
      produces:
      - application/json
      parameters:
      - name: email
        in: path
        description: email unique to the user that filters that user
        required: true
        type: string
      responses:
        200:
          $ref: '#/definitions/ApiResponse'
        400:
          description: Invalid email supplied
        404:
          description: User not found
        405:
          description: Validation exception
  /users/api/{email}:
    get:
      tags:
      - users
      summary: Generate API for a user
      produces:
      - application/json
      parameters:
      - name: email
        in: path
        description: email unique to the user that filters that user
        required: true
        type: string
      responses:
        200:
          $ref: '#/definitions/ApiResponse'
        400:
          description: Invalid email supplied
        404:
          description: User not found
        405:
          description: Validation exception
  /users/add:
    post:
      summary: Adds a particular user to the database
      consumes: [multipart/form-data, application/json]
      description: adding a user to the list of authorized users
      operationId: AddaUser
      parameters:
      - name: email
        in: formData
        description: email unique to the user
        required: true
        type: string
      - name: firstname
        in: formData
        description: firstname of the user
        required: true
        type: string
      - name: lastname
        in: formData
        description: lastname of the user
        required: true
        type: string
      responses:
        200:
          $ref: '#/definitions/ApiResponse'
        404:
          description: invalid paramaters
  /users/authenticate/{app}:
    get:
      tags:
      - token
      summary: Authorize a user on the Andromeda
      description: Check if user has been authorized to to sign in
      produces:
      - application/json
      parameters:
      - name: app
        in: path
        description: App ID of application to authorize user against
        required: true
        type: string
      - name: token
        in: query
        description: Google API Token to authorize
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: User successfully Authorized
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: Invalid email
definitions:
  ApiResponse:
    type: object
    properties:
      error:
        type: boolean
        default: false
      code:
        format: int32
        type: integer
      message:
        type: string
      response:
        $ref: "#/definitions/responseFormat"
  responseFormat:
    type: object
    properties:
      email:
        description: this is the email of a particular user
        type: string
      firstname:
        description: this is the email of a particular user
        type: string
      lastname:
        description: this is the email of a particular user
        type: string
      active:
         description: this is the email of a particular user
         type: boolean
      